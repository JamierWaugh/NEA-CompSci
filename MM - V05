# Code for main menu of the program
import pygame 
import CheckersGUI


# initializing the constructor 
pygame.init() 

# screen resolution 
SCREEN_WIDTH = 600
SCREEN_HEIGHT = 600
screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT)) # opens window
pygame.display.set_caption("Checkers")
run = True



# Define color constants for later use in drawing
RED = (255, 0 , 0)
WHITE = (255,255,255)
KWHITE = (255,160,0)
LBROWN = (222,184,135)
DBROWN = (85,51,17)
BLACK = (0,0,0)
KBLACK = (128,0,128)
MENUBROWN = (171,124,104)
MENUDARK = (78,51,28)
MENULIGHT = (95,64,37)

# stores the width of the 
# screen into a variable 
width = screen.get_width() 

# stores the height of the 
# screen into a variable 
height = screen.get_height() 

# defining a font 
smallFont = pygame.font.SysFont("Verdana",20) 
titleFont = pygame.font.SysFont("Verdana",45)
buttonFont = pygame.font.SysFont("Verdana", 30)
smallButton = pygame.font.SysFont("Verdana", 25)

# rendering a text written in 
# this font 
Quit = smallFont.render("Quit" , True , WHITE) 
Title = titleFont.render("Checkers", True, WHITE)
Play = buttonFont.render("Play", True, WHITE)
Stats = buttonFont.render("Stats", True, WHITE)
About = buttonFont.render("About", True, WHITE)
Settings  = buttonFont.render("Settings", True, WHITE)
Back = smallFont.render("Back", True, WHITE)
Singleplayer = buttonFont.render("Singleplayer", True, WHITE)
Multiplayer = buttonFont.render("Multiplayer", True, WHITE)
Normal = buttonFont.render("Normal", True, WHITE)
Hard  = buttonFont.render("Hard", True, WHITE)
Continue = buttonFont.render("Continue", True, WHITE)


def colourButton(x,y,w,l,fontType,string,changed,textX,textY): # Function to highlight button when hovered over with mouse
    pos = pygame.mouse.get_pos()
    if x <= pos[0] <= x+w and y <= pos[1] <= y+l: 
        pygame.draw.rect(screen,LBROWN,[x,y,w,l]) 
        changed = fontType.render(str(string) , True , BLACK)
        screen.blit(changed , (textX,textY))  
        return changed
        
    else: 
        pygame.draw.rect(screen,MENULIGHT,[x,y,w,l])
        changed = fontType.render(str(string) , True , WHITE)  
        screen.blit(changed , (textX,textY)) 
        return changed
    
def playButton(Back,Singleplayer, Multiplayer, Normal, Hard, Continue):
    backPressed = False
    multiSelected = False
    singleSelected = False
    normal = False
    hard = False
    while backPressed == False: #while back button is not pressed
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
            if event.type == pygame.MOUSEBUTTONDOWN:
                pos = pygame.mouse.get_pos()
                if width - 70 <= pos[0] <= width and 0 <= pos[1] <= 40:
                    backPressed = True # If back button is pressed, go back to page before
                elif 185 <= pos[0] <=  420 and 245 <= pos[1] <= 295: # if multiplayer button is selected
                    multiSelected = True
                    singleSelected = False
                elif 185 <= pos[0] <= 420 and 185 <= pos[1] <= 235: # if singleplayer button is selected
                    singleSelected = True
                    multiSelected = False
                elif singleSelected == True and 185 <= pos[0] <= 420 and 305 <= pos[1] <= 355: # if singelplayer is already selected and normal difficulty is chosen
                    normal = True
                    hard = False
                elif normal ==  True and 185 <= pos[0] <= 420 and 485 <= pos[1] <= 535: # if continue button is pressed while normal difficulty is chosen, load normal game
                    pygame.quit()
                    CheckersGUI.play(2,3)
                elif hard == True and 185 <= pos[0] <= 420 and 485 <= pos[1] <= 535: # if continue button is pressed while hard difficulty is chosen, load game in hard mode
                    pygame.quit()
                    CheckersGUI.play(2,5)
                elif singleSelected == True and 195 <= pos[0] <= 420 and 365 <= pos[1] <= 415: # if hard mode button is pressed while singleplayer is selected
                    hard = True
                    normal = False
                elif multiSelected == True and 185 <= pos[0] <= 420 and 485 <= pos[1] <= 535: # if continue button is chosen while multiplayer is selected
                    pygame.quit()
                    CheckersGUI.play(1,1)  
                
                else:
                    multiSelected = False # reset if clicked elsewhere
                    singleSelected = False
                    normal = False
                    hard = False
                    

        pos = pygame.mouse.get_pos()
        screen.fill((MENUDARK)) 
        Back = colourButton(width-80,0,100,25,smallFont,"Back",Back,width-70,0 )
        pygame.draw.rect(screen,MENUBROWN,[150,150,300,300]) # main menu centre box
        pygame.draw.rect(screen,RED,[100,50,400,50]) # title card
        screen.blit(Title, [210,50]) # title text
        pygame.draw.rect(screen, MENULIGHT, [185,185,235,50]) # Singleplayer button
        Singleplayer = colourButton(185,185,235,50,buttonFont,"Singleplayer", Singleplayer,220,185)
        pygame.draw.rect(screen, MENULIGHT, [185,245,235,50]) # Multiplayer button
        Multiplayer = colourButton(185,245,235,50,buttonFont,"Multiplayer", Multiplayer,220,245)
        pygame.draw.rect(screen, MENULIGHT, [185,305,235,50]) # Normal button
        Normal = colourButton(185,305,235,50,buttonFont,"Normal",Normal,220,305)
        pygame.draw.rect(screen, MENULIGHT, [185,365,235,50]) # Hard button
        Hard = colourButton(185,365,235,50,buttonFont, "Hard", Hard, 220, 365)
        if multiSelected == True: # if multiplayer is chosen, highlight it and create continue button
            pygame.draw.rect(screen,MENULIGHT, [ 185, 485, 235, 50])
            Continue = colourButton(185,485,235,50,buttonFont, "Continue?", Continue, 220 , 485)
            pygame.draw.rect(screen, LBROWN, [185,245,235,50])
            Multiplayer = buttonFont.render("Multiplayer" , True , BLACK)  
            screen.blit(Multiplayer , (220,245))
        if singleSelected == True: # if singleplayer is chosen, highlight it
            pygame.draw.rect(screen, LBROWN, [185,185,235,50])
            Singleplayer = buttonFont.render("Singleplayer" , True , BLACK)  
            screen.blit(Singleplayer , (220,185))
        if normal == True: # if singleplayer is chosen and normal is chosen, create continue button
            pygame.draw.rect(screen,MENULIGHT, [ 185, 485, 235, 50])
            Continue = colourButton(185,485,235,50,buttonFont, "Continue?", Continue, 220 , 485)
            pygame.draw.rect(screen, LBROWN, [185,305,235,50])
            Normal = buttonFont.render("Normal" , True , BLACK)  
            screen.blit(Normal , (220,305))
        if hard == True: # if singleplayer is chosen and hard is chosen, create continue button
            pygame.draw.rect(screen,MENULIGHT, [ 185, 485, 235, 50])
            Continue = colourButton(185,485,235,50,buttonFont, "Continue?", Continue, 220 , 485)
            pygame.draw.rect(screen, LBROWN, [185,365,235,50])
            Hard = buttonFont.render("Hard" , True , BLACK)  
            screen.blit(Hard , (220,365))




            
        
        pygame.display.update()


while run == True: 
    for event in pygame.event.get(): 
        if event.type == pygame.QUIT: 
            pygame.quit() 
        if event.type == pygame.MOUSEBUTTONDOWN:  
            pos = pygame.mouse.get_pos()
            #if the mouse is clicked on the 
            # button the game is terminated 
            if width-70 <= pos[0] <= width and 0 <= pos[1] <= 40: 
                pygame.quit() #quit button closes program
            if 185 <= pos[0] <= 420 and 185 <= pos[1] <= 235:
                playButton(Back,Singleplayer, Multiplayer, Normal, Hard, Continue) # if play button is pressed, load play page


    # fills the screen with a color 
    screen.fill((MENUDARK)) 

    # stores the (x,y) coordinates into 
    # the variable as a tuple 
    pos= pygame.mouse.get_pos() 

    # if mouse is hovered on a button it 
    # changes to lighter shade 
    Quit = colourButton(width-80,0,100,25,smallFont,"Quit",Quit,width-70,0)
    pygame.draw.rect(screen,MENUBROWN,[150,150,300,300]) # main menu centre box
    pygame.draw.rect(screen,RED,[100,50,400,50]) # title card
    screen.blit(Title, [210,50]) # title text
    pygame.draw.rect(screen, MENULIGHT, [185,185,235,50]) # Play button
    Play = colourButton(185,185,235,50,buttonFont,"Play", Play,220,185)
    pygame.draw.rect(screen, MENULIGHT, [185,245,235,50]) # Stats button
    Stats = colourButton(185,245,235,50,buttonFont,"Stats", Stats,220,245)
    pygame.draw.rect(screen, MENULIGHT, [185,305,235,50]) # About button
    About = colourButton(185,305,235,50,buttonFont,"About",About,220,305)
    pygame.draw.rect(screen, MENULIGHT, [185,365,235,50]) # Settings button
    Settings = colourButton(185,365,235,50,buttonFont, "Settings", Settings, 220, 365)



    # updates the frames of the game 
    pygame.display.update() 
